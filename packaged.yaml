AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWS Fanout pattern
Parameters:
  WebhookURL:
    Type: String
  Channel:
    Type: String
  UserName:
    Type: String
  Icon:
    Type: String
  FileBucket:
    Type: String
Resources:
  WriteExtLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-fanout-pattern-jumpyoshim/55e05dbce9cd0867a0ea0248211c5938
      Handler: write_ext
      Runtime: go1.x
      Timeout: 10
      Tracing: Active
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - ForExtLambdaQueue
              - Arn
            BatchSize: 10
  ForExtLambdaQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 20
      MessageRetentionPeriod: 60
  WriteExtLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${WriteExtLambda}
      RetentionInDays: 1
  WriteFileNameLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-fanout-pattern-jumpyoshim/55e05dbce9cd0867a0ea0248211c5938
      Handler: write_file_name
      Runtime: go1.x
      Timeout: 10
      Tracing: Active
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - ForFileNameLambdaQueue
              - Arn
            BatchSize: 10
  ForFileNameLambdaQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 20
      MessageRetentionPeriod: 60
  WriteFileNameLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${WriteFileNameLambda}
  NotifierLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-fanout-pattern-jumpyoshim/55e05dbce9cd0867a0ea0248211c5938
      Handler: notifier
      Runtime: go1.x
      Timeout: 10
      Tracing: Active
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic:
              Ref: S3FileTopic
      Environment:
        Variables:
          WEBHOOK_URL:
            Ref: WebhookURL
          CHANNEL:
            Ref: Channel
          USER_NAME:
            Ref: UserName
          ICON:
            Ref: Icon
  NotifierLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${NotifierLambda}
      RetentionInDays: 1
  S3FileTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - ForExtLambdaQueue
          - Arn
        Protocol: sqs
      - Endpoint:
          Fn::GetAtt:
          - ForFileNameLambdaQueue
          - Arn
        Protocol: sqs
      TopicName: s3-file-topic
  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sns:Publish
          Resource:
            Ref: S3FileTopic
          Condition:
            ArnLike:
              aws:SourceArn:
                Fn::Sub: arn:aws:s3:::${FileBucket}
          Principal:
            AWS: '*'
      Topics:
      - Ref: S3FileTopic
  SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal: '*'
          Action: sqs:*
          Resource: '*'
          Condition:
            StringEquals:
              aws:SourceArn:
              - Ref: S3FileTopic
      Queues:
      - Ref: ForExtLambdaQueue
      - Ref: ForFileNameLambdaQueue
  SQSLambdaSample:
    Type: AWS::S3::Bucket
    DependsOn: SNSTopicPolicy
    Properties:
      BucketName:
        Ref: FileBucket
      NotificationConfiguration:
        TopicConfigurations:
        - Topic:
            Ref: S3FileTopic
          Event: s3:ObjectCreated:Put
